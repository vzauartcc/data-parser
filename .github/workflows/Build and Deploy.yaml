name: Build and Deploy

on:
  pull_request:
    branches: [main]
    types:
      - closed

jobs:
  Build-and-Push:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2
        
      - name: Log in to container registry
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            ghcr.io/vzauartcc/data-parser:${{ github.sha }}
            ghcr.io/vzauartcc/data-parser:master
            ghcr.io/vzauartcc/data-parser:latest
  Deploy-to-Staging:
    needs: Build-and-Push
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Initialize doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log into K8s cluster
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 zau-k8s
      - name: Deploy image to cluster
        run: kubectl set image deployment/data-parser-dev data-parser-dev=ghcr.io/vzauartcc/data-parser:${{ github.sha }} --record -n zau-staging-web-stack
      - name: Verify deployment
        run: kubectl rollout status deployment/data-parser-dev -n zau-staging-web-stack
  Deploy-to-Prod:
    needs: Deploy-to-Staging
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Initialize doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log into K8s cluster
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 zau-k8s
      - name: Deploy image to cluster
        run: kubectl set image deployment/data-parser data-parser=ghcr.io/vzauartcc/data-parser:${{ github.sha }} --record -n zau-web-stack
      - name: Verify deployment
        run: kubectl rollout status deployment/data-parser -n zau-web-stack
